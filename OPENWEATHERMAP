import tkinter as tk
from tkinter import messagebox
from PIL import ImageTk, Image
import requests, datetime, json

API_KEY = "d867dc87a156a09121983f0d1befee75"    # ← replace with your key if needed
WIDTH, HEIGHT = 450, 700
BG = "white"
root = tk.Tk()
root.title("Weather App")
root.geometry(f"{WIDTH}x{HEIGHT}")
root.configure(bg=BG)
root.resizable(False, False)

logo_img = ImageTk.PhotoImage(Image.open("logo.png").resize((WIDTH, 160)))
tk.Label(root, image=logo_img, bg=BG).place(x=0, y=520)

now = datetime.datetime.now()
tk.Label(root, text=now.strftime("%A"),      bg=BG, font=("Helvetica", 15, "bold")).place(x=5,   y=130)
tk.Label(root, text=now.strftime("%d %B"),   bg=BG, font=("Helvetica", 15, "bold")).place(x=100, y=130)
tk.Label(root, text=now.strftime("%I:%M %p"),bg=BG, font=("Helvetica", 15, "bold")).place(x=10,  y=160)

if 6 <= now.hour < 18:           
    icon_img = ImageTk.PhotoImage(Image.open("sun.png").resize((160, 160)))
else:
    icon_img = ImageTk.PhotoImage(Image.open("moon.png").resize((160, 160)))
tk.Label(root, image=icon_img, bg=BG).place(x=210, y=200)

city_var   = tk.StringVar()
entry      = tk.Entry(root, textvariable=city_var, font=("Helvetica", 12))
entry.grid(row=1, column=0, sticky="nsew", ipady=10, padx=5)
entry.focus()

def get_weather() -> None:
    """Fetch weather for the city in entry box and update labels."""
    city = city_var.get().strip()
    if not city:
        messagebox.showinfo("Input needed", "Please enter a city name.")
        return

    url = (f"https://api.openweathermap.org/data/2.5/weather"
           f"?q={city}&units=metric&appid={API_KEY}")
    try:
        resp = requests.get(url, timeout=10)
        resp.raise_for_status()
        data = resp.json()
    except requests.exceptions.RequestException as e:
        messagebox.showerror("Network error", f"Could not reach service:\n{e}")
        return
    except json.JSONDecodeError:
        messagebox.showerror("Parse error", "Received invalid response.")
        return

    try:
        main      = data["main"]
        sys       = data["sys"]
        coord     = data["coord"]
        lbl_city.configure(text=data["name"])
        lbl_country.configure(text=sys.get("country", "..."))
        lbl_temp.configure(text=f'{main["temp"]:.1f} °C')
        lbl_humi.configure(text=f'{main["humidity"]} %')
        lbl_tmax.configure(text=f'{main["temp_max"]:.1f} °C')
        lbl_tmin.configure(text=f'{main["temp_min"]:.1f} °C')
        lbl_lon.configure(text=f'{coord["lon"]:.2f}')
        lbl_lat.configure(text=f'{coord["lat"]:.2f}')
    except KeyError:
        messagebox.showerror("Data error",
            "Weather information incomplete for this location.")
        return

btn = tk.Button(root, text="Search", command=get_weather)
btn.grid(row=1, column=1, sticky="nsew")

lbl_city    = tk.Label(root, text="…", bg=BG, font=("Helvetica", 15, "bold"))
lbl_country = tk.Label(root, text="…", bg=BG, font=("Helvetica", 15, "bold"))
lbl_city.place   (x=10,  y=63)
lbl_country.place(x=135, y=63)

lbl_lon = tk.Label(root, text="…", bg=BG, font=("Helvetica", 15))
lbl_lat = tk.Label(root, text="…", bg=BG, font=("Helvetica", 15))
lbl_lon.place(x=25, y=95)
lbl_lat.place(x=95, y=95)

lbl_temp = tk.Label(root, text="…", bg=BG, fg="black",
                    font=("Helvetica", 35, "bold"))
lbl_temp.place(x=18, y=220)

tk.Label(root, text="Humidity:", bg=BG, font=("Helvetica", 15, "bold"))\
    .place(x=3,  y=400)
lbl_humi = tk.Label(root, text="…", bg=BG, font=("Helvetica", 15, "bold"))
lbl_humi.place(x=130, y=400)

tk.Label(root, text="Max Temp:", bg=BG, font=("Helvetica", 15, "bold"))\
    .place(x=3,  y=430)
lbl_tmax = tk.Label(root, text="…", bg=BG, font=("Helvetica", 15, "bold"))
lbl_tmax.place(x=130, y=430)

tk.Label(root, text="Min Temp:", bg=BG, font=("Helvetica", 15, "bold"))\
    .place(x=3,  y=460)
lbl_tmin = tk.Label(root, text="…", bg=BG, font=("Helvetica", 15, "bold"))
lbl_tmin.place(x=130, y=460)

tk.Label(root, text="All temperatures in °C",
         bg=BG, font=("Helvetica", 10, "italic")).place(x=95, y=495)

root.mainloop()
